doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Gradient Circus

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-hash='intro')
        h2 Who’s this bozo? [IMG]
        ul
          li <a href="https://twitter.com/iamnotyourbroom">@iamnotyourbroom</a>
          li <a href="https://shoehornwithteeth.com/">shoehornwithteeth.com</a>

      section.middle
        img(src='images/If-I-ran-the-circus.jpg', height='70%')

      section(data-bespoke-state='title')
        h1 Gradient Circus

      section
        h2 Types of gradients
        ul.gradient-gallery
          li.linear
            span.example
            code linear-gradient
          li.radial
            span.example
            code radial-gradient
          li.repeating-linear
            span.example
            code repeating-linear-gradient
          li.repeating-radial
            span.example
            code repeating-radial-gradient

      section
        h2 Support
        a(href='http://caniuse.com/#feat=css-gradients') No prefixes needed!
        img(src='SCREENSHOT')


      // ACT I

      section(data-bespoke-state='title')
        h1 Act I
        h2 Tips and tricks

      section
        h2 Patterns
        | [IMG]

      section
        h2 Pictures
        p A single div

      section
        h2 Debugging
        p Gradient inspector

      section(data-bespoke-state='grey-area')
        h2 Animation
        p Bit of a grey area

      section
        h2 Future
        p Conic gradients
        p Something something Polyfill


      // ACT II

      section(data-bespoke-state='title')
        h1 Act II
        h2 Linear gradient angles

      section
        | [IMG FROM PATRICK BROSSET'S ARTICLE]

      section
        h2 CoCodePen the Clown
        video(src='SCREENCAST OF USING THE DEMO')


      // ACT III

      section(data-bespoke-state='title')
        h1 Act III
        h2 Background image layering

      section.demo-layering(data-bgimage-showcase)
        h2 Images from the top, then colour
        p Remember, gradients are just images
        //- | bg colour + images + gradients
        .code-steps
          .code-steps-code
            pre
              code.language-css.
                background-color:
                  skyblue;
                background-image:
                  url(...),
                  linear-gradient(...),
                  radial-gradient(...);
          .code-steps-info
            .showcase-container
              .showcase-target

      section.demo-positioning
        h2 Images from the top, then colour
        div(data-bgimage-showcase)
          | bg-size + bg-position

      // ACT IV

      section(data-bespoke-state='title')
        h1 Act IV
        h2 Colour calculations

      section.demo-colour-calcs
        h2 A basic example
        .example(style='background:linear-gradient(to right, hsl(220, 90%, 50%), hsl(0, 90%, 60%));')
          .marker(data-linked-step=4, style="color: rgba(129, 75, 152, 1)")
        .code-steps
          .code-steps-code
            pre.language-(data-linked-step=1)
              code.language-.
                linear-gradient(
                  to right,
                  <span data-code-colour>hsl(220, 90%, 50%)</span>,
                  <span data-code-colour>hsl(0, 90%, 60%)</span>
                </span>);
            pre.language-(data-linked-step=2)
              code.language-.
                linear-gradient(
                  to right,
                  <span data-code-colour>rgba(13, 89, 242, 1)</span>,
                  <span data-code-colour>rgba(245, 61, 61, 1)</span>
                </span>);
            pre.language-(data-linked-step=3)
              code.language-.
                linear-gradient(
                  to right,
                  <span data-code-colour>rgba( 13, 89, 242, 1)</span>,
                <span style="color: #bbb;">/*      ↓   ↓    ↓   ↓ */</span>
                  <span data-code-colour>rgba(245, 61,  61, 1)</span>
                </span>);
            pre.language-(data-linked-step=4)
              code.language-.
                linear-gradient(
                  to right,
                  <span data-code-colour>rgba( 13, 89, 242, 1)</span>,
                <span style="color: #bbb;">/*      ↓   ↓    ↓   ↓ </span>
                  <span data-code-colour>rgba(129, 75, 152, 1)</span>
                <span style="color: #bbb;">        ↓   ↓    ↓   ↓ */</span>
                  <span data-code-colour>rgba(245, 61,  61, 1)</span>
                </span>);
          ol.code-steps-info
            li(data-linked-step=1) A simple gradient
            li(data-linked-step=2) Convert to RGBA
            li(data-linked-step=3) Interpolate each channel separately
            li(data-linked-step=4) Example at 50%

      section.demo-transparency
        h2 Transparency
        p
          code transparent == rgba(0, 0, 0, 0)
          pre.language-(data-linked-step=3)
            code.language-.
              linear-gradient(red, rgba(255,0,0,0) 50%,
                              rgba(0,0,255,0) 50%, blue);
          pre.language-.hide-when-previous-visible
            code.language-.
              linear-gradient(red, transparent, blue);

        .trans-demo
          .trans-list
            .wrapper
              h3(data-linked-step=1) Old spec
              h4(data-linked-step=1) Normal colour
              ul(data-linked-step=2)
                li Safari
                li Canvas
                li SVG
          .example
            include premul-gradient-svg
          .example
            - var usePremul = true
            include premul-gradient-svg
          .trans-list
            h3(data-linked-step=1) New spec
            h4(data-linked-step=1) Premultiplied alpha
            ul(data-linked-step=2)
              li Chrome
              li Firefox
              li IE / Edge

      section
        h2 Premultiplied alpha, what?


      // FINALE
      
      section(data-bespoke-state='title')
        h1 Grand Finale

      section
        p LOGO


    script(src='build/build.js')
